\documentclass[mathserif,compress]{beamer} 
\usepackage{beamerthemeDresden} 
\usepackage[english]{babel}
\usepackage{amsmath,amssymb}
\usepackage[latin1]{inputenc}
\usepackage{palatino}
\usepackage{graphicx}
\usepackage{subfigure}
\usepackage{pgf}
\usepackage{relsize}
\def\beq{\begin{equation}}
\def\eeq{\end{equation}}
\def\bit{\begin{itemize}}
\def\eit{\end{itemize}}
\def\bdm{\begin{displaymath}}
\def\edm{\end{displaymath}}
\def\ben{\begin{enumerate}}
\def\een{\end{enumerate}}
\def\bb{\mathbf{b}}
\def\bc{\mathbf{c}}
\def\bd{\mathbf{d}}
\def\bh{\mathbf{h}}
\def\bm{\mathbf{m}}
\def\br{\mathbf{r}}
\def\bs{\mathbf{s}}
\def\bu{\mathbf{u}}
\def\bv{\mathbf{v}}
\def\bw{\mathbf{w}}
\def\bx{\mathbf{x}}
\def\by{\mathbf{y}}
\def\bz{\mathbf{z}}
\def\bA{\mathbf{A}}
\def\bD{\mathbf{D}}
\def\bG{\mathbf{G}}
\def\bI{\mathbf{I}}
\def\bQ{\mathbf{Q}}
\def\bR{\mathbf{R}}
\def\bS{\mathbf{S}}
\def\bV{\mathbf{V}}
\def\bW{\mathbf{W}}
\def\bX{\mathbf{X}}
\def\bY{\mathbf{Y}}
\def\bZ{\mathbf{Z}}
\def\cB{\mathcal{B}}
\def\cF{\mathcal{F}}
\def\cI{\mathcal{I}}
\def\cK{\mathcal{K}}
\def\cU{\mathcal{U}}
\def\bbeta{\mbox{\boldmath $\beta$}}
\def\bepsilon{\mbox{\boldmath $\epsilon$}}
\def\bdelta{\mbox{\boldmath $\delta$}}
\def\bgamma{\mbox{\boldmath $\gamma$}}
\def\bldeta{\mbox{\boldmath $\eta$}}
\def\bphi{\mbox{\boldmath $\phi$}}
\def\bkappa{\mbox{\boldmath $\kappa$}}
\def\blambda{\mbox{\boldmath $\lambda$}}
\def\bmu{\mbox{\boldmath $\mu$}}
\def\bnu{\mbox{\boldmath $\nu$}}
\def\btheta{\mbox{\boldmath $\theta$}}
\def\brho{\mbox{\boldmath $\rho$}}
\def\bDelta{\mbox{\boldmath $\Delta$}}
\def\bLambda{\mbox{\boldmath $\Lambda$}}
\def\bSigma{\mbox{\boldmath $\Sigma$}}
\def\var{\textrm{var}}
\def\cov{\textrm{cov}}
\def\log{\textrm{log}}
\def\median{\textrm{median}}
\def\argmin{\textrm{arg min }}
\def\bzero{\mathbf{0}}
\def\bone{\mathbf{1}}
\def\Poi{\textrm{Poi}}
\def\Unif{\textrm{Unif}}
\def\upp{^\prime}
\def\upi{^{-1}}
\newcommand{\cye}[1]{\color{yellow!70!black}#1}
\newcommand{\cre}[1]{\color{red!70!black}#1}
\newcommand{\cbl}[1]{\color{blue!70!black}#1}
\newcommand{\cgr}[1]{\color{green!70!black}#1}
\newcommand{\cS}{\ensuremath{\mathcal{S}}}

\begin{document}
<<setup, include=FALSE>>=
# smaller font size for chunks
opts_chunk$set(size = 'tiny')
purl("CountSamp.Rnw") ## Dump all R code to a file
@
\title[]{Estimating Abundance from Counts in Large Data Sets of Irregularly-Spaced Plots using Spatial Basis Functions}

\author[Jay M. Ver Hoef]{Jay Ver Hoef} 

\institute[NOAA National Marine Mammal Lab]
{
	\normalsize NOAA National Marine Mammal Lab \\
	NOAA Fisheries \\
	International Arctic Research Center \\
	Fairbanks, Alaska, USA\\
	\vspace{0.1cm}
}
\date[05/17/13]{}
 
\maketitle
 
% very important to use option [fragile] for frames containing code output!
%-------------------------------------------------------------------------------
%                        Introduction
%-------------------------------------------------------------------------------

\section{Introduction}
\subsection{}
\begin{frame}[fragile]
\frametitle{Introduction}
	
	\includegraphics[width=\maxwidth]{figure/Introductory-plot}

\vspace{.5cm}
\scriptsize

\end{frame}

%-------------------------------------------------------------------------------
%                        Motivating Example
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Motivating Example}

	<<icyBayIntro-plot, fig.width=6, fig.height=4, echo=FALSE, include = FALSE, cache = TRUE>>=
	library(spPlotSampCourse)
	path <- system.file("rawdata/seals", package = "spPlotSampCourse")
	outlineFile <- paste(path,"/","outline", sep = "")
	outline <- readShapePoly(outlineFile)
	plotsFile <- paste(path,"/","plots", sep = "")
	plots <- readShapePoly(plotsFile)
	par(mar = c(0.1,0.1,0.1,0.1))
	plot(outline)
	minmax <- plotPolygonsRGB(plots, colorCol = "counts", add = TRUE, border = par("bg"))
	addRGBRampLegend(minmax[,1], minmax[,2], 683353, 1182043, 684490, 1188985, 
		printFormat = "2.0")
	text(686700, 1182800, "Icy Bay, Alaska, 2008", pos = 4)
@  

\begin{center}
	\includegraphics[width = .95\maxwidth]{figure/icyBayIntro-plot} 
\end{center}

\end{frame}

%-------------------------------------------------------------------------------
%                        Goals
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Goals}

\footnotesize
	An estimator that is:
		\begin{itemize}
		\item fast to compute, robust, and requires few modeling decisions, similar to classical survey methods, 			\item based only on counts within plots; actual spatial locations of animals are unknown, 
		\item for the actual number of seals, not the mean of some assumed process that generated the data, 
		\item have a variance estimator with a population correction factor that shrinks to zero as the proportion of the study area that gets sampled goes to one, 
		\item unbiased with valid confidence intervals, 
		\item able to accommodate nonstationary variance throughout the area
		\end{itemize}

\end{frame}

%-------------------------------------------------------------------------------
%                       Inhomogeneous Spatial Point Processes
%-------------------------------------------------------------------------------

\section{Model}
\subsection{}
\begin{frame}[fragile]
\frametitle{Inhomogeneous Spatial Point Processes}

	$T(V)$ is the total number of points in planar region $V$
	\begin{center}
		$\lambda(\bs) = \lim_{|dx| \to 0} \frac{E\left( T(dx) \right) }{|dx|}$ \\
	\end{center}
	{\em Expected} abundance in $A \subseteq R$: \\
	\begin{center}
		$\mu(A)=\int_A \lambda(\bu|\btheta)d\bu$ \\
	\end{center}
	Abundance is assumed random \\
	\begin{center}
		$T(A) \sim \Poi(\mu(A))$ \\
	\end{center}
	Resulting in an observed pattern $\cS^+ = (\bs_1,\dots,\bs_N)$

\end{frame}

%-------------------------------------------------------------------------------
%                       Outline of an Estimator
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Outline of an Estimator}

	<<irregSamples-plot, fig.width=6, fig.height=6, echo=FALSE, include = FALSE, dev = "tikz">>=
		par(mar = c(0,0,0,0))
		plot(c(0,1),c(0,1), type = "n", xlab = "", ylab ="", xaxt = "n", yaxt = "n", bty = "n")
		rect(0,0,1,1,lwd = 2)
		rect(0.1666667, 0.1666667, 1 - 0.1666667, 1 - 0.1666667, lty = 5, lwd = 7, col = "lightgreen")
		rect(1.5*(1/6),3*(1/6),2.5*(1/6),4*(1/6), lwd = 5, col = "blue")
		text(2*(1/6),3.5*(1/6),"$B_i$", cex = 2.5, col = "white")
		rect(1.9*(1/6),1.2*(1/6),2.9*(1/6),2.2*(1/6), lwd = 5, col = "blue")
		rect(3*(1/6),3.5*(1/6),4*(1/6),4.5*(1/6), lwd = 5, col = "blue")
		rect(.8*(1/6),4.6*(1/6),1.8*(1/6),5.6*(1/6), lwd = 5, col = "blue")
		rect(4.5*(1/6),.5*(1/6),5.5*(1/6),1.5*(1/6), lwd = 5, col = "blue")
		rect(4.7*(1/6),3.8*(1/6),5.7*(1/6),4.8*(1/6), lwd = 5, col = "blue")
		rect(0.2*(1/6),0.2*(1/6),1.2*(1/6),1.2*(1/6), lwd = 5, col = "blue")
		rect(0.1666667, 0.1666667, 1 - 0.1666667, 1 - 0.1666667, lty = 5, lwd = 7)
		text(.06,.93,"$R$", cex = 3)
		text(.23,.76,"$A$", cex = 3)
	@

	\begin{tabular}{p{4.0cm} p{5.5cm}}
		\vspace{.1cm}
		\includegraphics[width = \maxwidth]{figure/irregSamples-plot} &
		\vspace{-.1cm}
		\begin{itemize}
			\item $\cB = \cup_{i = 1}^n (B_i \cap A)$
			\item $\cU \equiv \overline{\cB} \cap A$
			\item $T(A) = T(\cB) + T(\cU)$
			\item $T(\cU) \sim \Poi(\mu(\cU))$
			\item $\mu(\cU)= \int_{\cU} \lambda(\bu|\btheta) d\bu$
			\item $\widehat{T}(A) = T(\cB) + \widehat{T}(\cU)$
			\footnotesize
			\item $T(\cB) \rightarrow T(A) \Rightarrow \widehat{T}(A) \rightarrow T(A)$
		\end{itemize}
	\end{tabular}

\end{frame}

%-------------------------------------------------------------------------------
%                    From IPP to Poisson Regression
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{From IPP to Poisson Regression}

	\begin{tabular}{p{3.5cm} p{7.0cm}}
		\vspace{.1cm}
		\includegraphics[width = \maxwidth]{figure/irregSamples-plot} &
		\vspace{-.1cm}
		\begin{itemize}
			\item $Y(B_i) \sim \Poi(\mu(B_i))$
			\item $\mu(B_i) = \int_{B_i}\lambda(\bu|\btheta) d\bu$
			\item Let $\bs_i$ be centroid of $B_i$
			\item $\mu(B_i) \approx |{B_i}|\lambda(\bs_i|\btheta)$
			\item $\log(\mu(B_i)) = \log(|B_i|) + \log(\lambda(\bs_i|\btheta))$
			\item $\log(\lambda(\bs_i|\btheta)) = \bx(\bs_i)^\prime\bbeta$
		\end{itemize}
	\end{tabular}
Now us spatial basis functions to generate $\bx(\bs_i)$

\end{frame}

%-------------------------------------------------------------------------------
%                    Spatial Basis Functions
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Spatial Basis Functions}

	<<spatialBasisExplanation-plot, fig.width=6, fig.height=6, echo=FALSE, include = FALSE, dev = "tikz", cache = TRUE>>=
		circle <- function(x,y,r,...){
			m = 1000;
			A = seq(0, 2*pi, 2*pi/m);
			X = x + r * cos(A);
			Y = y + r * sin(A);
			lines(X,Y,...);
		}
		pointSimInhibit <- function(npair = 100, irange=0.05,
			lower.x.lim = -1, upper.x.lim = 1,
			lower.y.lim = -1, upper.y.lim = 1) 
		{ 
			spatpts <- data.frame(matrix(0,npair,2))
			colnames(spatpts) <- c("x","y")
			inpts <- 1 
			x.range <- upper.x.lim - lower.x.lim
			y.range <- upper.y.lim - lower.y.lim
			while(inpts <= npair){ok <- 1 
				xpt <- lower.x.lim + x.range*runif(1) 
				ypt <- lower.y.lim + y.range*runif(1) 
				chk <- inpts-1 
				ichk <- 1 
				while(ichk <= chk){ 
					distpt <- sqrt((xpt-spatpts[ichk,1])^2+(ypt-spatpts[ichk,2])^2) 
					if(distpt < irange){ 
						ok <- 0 
					ichk <- chk} 
				ichk <- ichk+1 } 
				if(ok == 1){spatpts[inpts,1:2] <- cbind(xpt,ypt) 
				inpts <- inpts+1 } 
			} 
			spatpts 
		} 
		par(mar = c(5,5,1,1))
		plot(c(0,10),c(0,10), type = "n", xlab = "x", ylab = "y", 
			cex.lab = 2, cex.axis = 2)
		points(pointSimInhibit(200, .4, 0, 10, 0, 10), pch = 19, cex = 1.5, col = "grey")
		for(i in 1:5) {
			for (j in 1:5) {
				inc <- 2
				x <- (10 + inc)/6 - inc/2 + (i-1)*inc
				y <- (10 + inc)/6 - inc/2 + (j-1)*inc
				points(x,y, pch = 19, cex = 2.5, col = "red")
				circle(x, y, .9*inc/2, lwd = 5, col = "red")
			}
		}
		for(i in 1:2) {
			for (j in 1:2) {
				inc <- 5
				x <- (10 + inc)/3 - inc/2 + (i-1)*inc
				y <- (10 + inc)/3 - inc/2 + (j-1)*inc
				points(x,y, pch = 19, cex = 2.5, col = "blue")
				circle(x, y, .9*inc/2, lwd = 5, col = "blue")
			}
		}
	set.seed(101)
	text(.2,9.9,"$\\bs_i$", pos = 4, cex = 3)
	text(1,9,"$\\bkappa_{F,j}$", pos = 4, cex = 3)
	text(2.5,7.5,"$\\bkappa_{C,j}$", pos = 4, cex = 3)
	@

	\begin{tabular}{p{5.0cm} p{5.5cm}}
		\vspace{.1cm}
		\includegraphics[width = 5.5cm]{figure/spatialBasisExplanation-plot} &
		\vspace{1cm}
		\begin{itemize}
			\item $C(h;\rho)=\exp(-h^2/\rho)$
			\item $\bX_{i,j} = C(\| \bs_i-\bkappa_{F,j})\|;\rho_F);$ \footnotesize $j = 2,\ldots,K_F + 1$
			\item $\bX_{i,j} = \normalsize C(\| \bs_i-\bkappa_{C,j})\|;\rho_C);$ \footnotesize $j = K_F + 2,\ldots,K_F + K_C + 1$
		\end{itemize}
	\end{tabular}
\footnotesize
knot location: k-means clustering of dense grid of spatial coordinates

\end{frame}

%-------------------------------------------------------------------------------
%                    Fitting the Model
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Fitting the Model}

minimize minus the log-likelihood:
\begin{center}
	$-\ell(\brho,\bbeta;\by) \propto \sum_{i=1}^{n} |B_i|\exp(\bx_{\brho}(\bs_i)\upp\bbeta) - y_i\log|B_i| - y_i\bx_{\brho}(\bs_i)\upp\bbeta$
\end{center}
Two-part algorithm: 
\begin{itemize}
	\item Condition on $\brho$ and use IWLS to estimate $\bbeta$ (with offset for $|B_i|$, ala GLMs)
	\item optimize for $\brho$ numerically
\end{itemize}

\end{frame}

%-------------------------------------------------------------------------------
%                    Back to the Estimator
%-------------------------------------------------------------------------------

\section{Inference}
\subsection{}
\begin{frame}[fragile]
\frametitle{Back to the Estimator}

\begin{itemize}
	\item $\widehat{T}(A) = T(\cB) + \widehat{T}(\cU)$
	\item $\widehat{T}(\cU) =\mu(\cU)=\int_\cU \lambda(\bu|\hat{\brho},\hat{\bbeta})d\bu$
	\item $ \lambda(\bu|\hat{\brho},\hat{\bbeta}) = \exp(\bx_{\hat{\brho}}(\bu)\upp\hat{\bbeta})$
\end{itemize}
Approximate integral with dense grid of $n_p$ points within $\bu_j \in \cU$.
\begin{center}
$\widehat{T}(A) = T(\cB) + \sum_{j=1}^{n_p}|U_i|\exp(\bx_{\hat{\brho}}(\bu_j)\upp\hat{\bbeta})$
\end{center}
where $|U_i|$ is a small area around each $\bu_j$
\end{frame}

%-------------------------------------------------------------------------------
%                    Variance
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Variance}

$\textrm{MSPE}(\hat{T}(A)) = E[(\hat{T}(A) - T(A))^2;\bbeta] = E[(\hat{T}(\cU) - T(\cU))^2;\bbeta]$
Note: as $\cU \cap A \to \varnothing \Rightarrow \textrm{MSPE}(\widehat{T}(A)) \to 0$ \\
From IPP assumption: $\hat{T}(\cU)$ independent from $T(\cU)$. \\
Assuming unbiasedness, $E[(\hat{T}(\cU)] = E[T(\cU)]$,
\begin{center}
$\textrm{MSPE} = \var[T(\cU);\bbeta] + \var[\hat{T}(\cU);\bbeta]$ \\
$= \mu(\cU;\bbeta) + \var[\hat{T}(\cU);\bbeta]$ \\
\end{center}
Now, what about $\var[\hat{T}(\cU);\bbeta]$?
\end{frame}

%-------------------------------------------------------------------------------
%                    Variance
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Variance}

Recall delta method result: $\var(f(\by)) \approx \bd\upp\bSigma\bd$ \\
\tiny
Jay M. Ver Hoef (2012) Who Invented the Delta Method? The American Statistician, 66:2, 124-127 \\
\normalsize
where $\var(\by) = \bSigma$ and $d_i = \partial f(\by)/\partial y_i$ \\
\footnotesize
\[
	d_i = \frac{\partial \hat{T}(\cU)}{\partial \beta_i} = \int_{\cU}x_i(\bu)\exp(\bx(\bu)^\prime\hat{\bbeta}) d\bu \approx \frac{|\cU|}{n_p}\sum_{i=1}^{n_p} x_i(\bs_i)\exp(\bx(\bs_i)^\prime\hat{\bbeta})
\]
\normalsize
From Rathbun and Cressie, (1994), if $\hat{\bbeta}$ is MLE,
\footnotesize
\[
\hat{\bSigma}= \left[\sum_{i=1}^n\int_{B_i} \bx(\bs)\bx({\bs})\upp\exp(\bx(\bs)\upp \hat{\bbeta}) d\bs\right]\upi \approx \left[ |B| \sum_{i=1}^{n} \bx(\bs_i)\bx({\bs_i})\upp\exp(\bx(\bs_i)\upp \hat{\bbeta}) \right]\upi
\]
\normalsize
if $|B_i| = |B| \ \forall \ i$. \\
\vspace{.2cm}
\tiny
Rathbun, S. L. and Cressie, N. (1994), ``Asymptotic Properties of Estimators for the Parameters of Spatial Inhomogeneous Poisson Point Processes,'' Advances in Applied Probability, 26, 122-154.

\end{frame}

%-------------------------------------------------------------------------------
%                    Summary
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Summary}

\begin{center}
$\widehat{T}(A) = T(\cB) + \frac{|\cU|}{n_p}\sum_{j=1}^{n_p}\exp(\bx_{\hat{\brho}}(\bu_j)\upp\hat{\bbeta})$
\end{center} 
\begin{center}
\[
\begin{array}{rl}
\widetilde{\var}(\widehat{T}(A)) = & \frac{|\cU|}{n_p}\sum_{j=1}^{n_p}\exp(\bx_{\hat{\brho}}(\bu_j)\upp\hat{\bbeta}) + \\ & \bd\upp\left[ |B| \sum_{i=1}^{n} \bx(\bs_i)\bx({\bs_i})\upp\exp(\bx(\bs_i)\upp \hat{\bbeta}) \right]\upi\bd
\end{array}
\]
\end{center} 
where \\
\begin{center}
 $d_i = \frac{|\cU|}{n_p}\sum_{i=1}^{n_p} x_i(\bs_i)\exp(\bx(\bs_i)^\prime\hat{\bbeta})$
\end{center}

\end{frame}

%-------------------------------------------------------------------------------
%                    Overdispersion
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Simulated Example}

	<<sim2-plot, fig.width=6, fig.height=6, echo=FALSE, include = FALSE, cache = TRUE>>=
		library(spPlotSampCourse)
		#  SAMPLE PLOTS
			ni <- 16
			nj <- 16
			PlotSize <- 0.3
			offst <- (10-.3*16)/(2*17)
			ep <- .01
			samples <- NULL
			ID <- 1
			for(i in 1:ni) {
				for (j in 1:nj) {
					if (i != 3 & j != 2 & j != 5)
					{
						  xL <- (i-1)*10/ni + offst
						  xU <- (i-1)*10/ni + offst + PlotSize
						  yL <- (j-1)*10/nj + offst
						  yU <- (j-1)*10/nj + offst + PlotSize
						  samples <- c(samples, Polygons(list(Polygon(cbind(c(xL, xU, xU, xL, xL),
						                                    c(yL, yL, yU, yU, yL)))), ID = ID))
							ID = ID + 1
					}
				}
			}
			plots <- SpatialPolygons(samples)
			df <- data.frame(pltarea = rep(NA, times = length(plots@polygons)))
			for(i in 1:length(plots@polygons)) 
				df[i,"pltarea"] <- plots@polygons[[i]]@Polygons[[1]]@area
			row.names(df) <- as.character(1:length(plots@polygons))
			plots <- SpatialPolygonsDataFrame(plots, df)
			par(mar = c(0,0,0,0))
			plot(plots)
			loXlim <- 0
			upXlim <- 10
			loYlim <- 0
			upYlim <- 10
			outline <- SpatialPolygons(list(Polygons(list(Polygon(
				cbind(c(loXlim, upXlim, upXlim, loXlim, loXlim),
				c(loYlim, loYlim, upYlim, upYlim, loYlim)))), ID = "bnd")))
			plot(outline, add = TRUE)
		#  SIMULATION
			set.seed(32)
			lower.x.bbox <- runif(1, 3.5, 4.5)
			upper.x.bbox <- runif(1, 7.5, 8.5)
			lower.y.bbox <- runif(1, 3.5, 4.5)
			upper.y.bbox <- runif(1, 7.5, 8.5)
			nseed.big <- 100
			nseed.sma <- 25
			Poi.mean.big <- 15
			Poi.mean.sma <- 9
			big.range <- 1
			sma.range <- 0.02
			trend <- TRUE

			PlotSize <- .5
			pcover <- .5
			SampBal <- TRUE

			Sim <- pointSimClus(nseed.big = nseed.big,
				nseed.sma = nseed.sma,
				Poi.mean.big = Poi.mean.big,
				Poi.mean.sma = Poi.mean.sma,
				big.range = big.range,
				sma.range = sma.range,
				lower.x.lim = 0, upper.x.lim = 10,
				lower.y.lim = 0, upper.y.lim = 10,
				lower.x.bbox = lower.x.bbox, upper.x.bbox = upper.x.bbox,
				lower.y.bbox = lower.y.bbox, upper.y.bbox = upper.y.bbox,
				trend = trend)
			simPts <- Sim$SimPts
			coordinates(simPts) <- c("x","y")
			plot(simPts, add = TRUE, pch = 19, cex = .5)

			TrueAbundance <- length(coordinates(simPts)[,1])

			counts <- rep(NA, times  = length(plots@polygons))
			for(i in 1:length(plots@polygons)) {
				counts[i] <- sum(!is.na(over(simPts, 
					SpatialPolygons(list(plots@polygons[[i]])))))
			}
			# add count data to Photo Plot Outlines
			pltsData <- plots@data
			pltsData[,"counts"] <- counts
			plots@data <- pltsData
			#undebug(spCountSamp)
			EstOut2 <- spCountSamp(counts ~ 1, outline, plots, 
				nNodesRequestC = 4, 
				nNodesRequestF = 14, percentZero = 75)

			points(EstOut2$nodeLocationsF, pch = 19, col = "red", cex = 2)
			points(EstOut2$nodeLocationsC, pch = 19, col = "blue", cex = 2)
			plot(EstOut2$convexPolyKnotsFine, add = TRUE, lwd = 3, border = rgb(.2,.8,.2))
@

	\vspace{-.1cm}
	\begin{center}
	\includegraphics[width = .6\maxwidth]{figure/sim2-plot}
	\end{center}

\end{frame}

\begin{frame}[fragile]
\frametitle{Simulated Example}

	<<exFittedSurface-plot, fig.width=8, fig.height=6, echo=FALSE, include = FALSE, fig.keep = 'last', cache = TRUE>>=
		qtiles <- quantile(EstOut2$Predictions$Predictions, p = (1:7)/8)
		breaks <- c(min(EstOut2$Predictions$Predictions)-1e-32, 
			qtiles, max(EstOut2$Predictions$Predictions))
		cramp <- rainbow(length(breaks) - 1, start = .66, end = .99)
		par(mar = c(0,0,0,0))
		layout(matrix(1:2, nrow = 1), widths = c(3,1))
		image.spCountSamp(EstOut2, breaks = breaks, col = cramp)
		plot(plots, add = TRUE)
		plot(outline, add = TRUE)
		par(mar = c(0,0,0,0))
		plot(c(0,1), c(0,1), type = "n", xlab = "", ylab = "", bty = "n",
			xaxt = "n", yaxt = "n")
		addBreakColorLegend(.1, .1, .5, .9, 
			breaks = breaks, colors = cramp, printFormat = "2.4", cex = 1.5)
	@

		\vspace{-.1cm}
		\begin{center}
		\includegraphics[width = .55\maxwidth]{figure/exFittedSurface-plot} \\
		\end{center}
		\vspace{-.2cm}
		True abundance was \Sexpr{TrueAbundance} \\
		Estimated abundance was \Sexpr{round(EstOut2$estimate)} with standard error \Sexpr{round(EstOut2$stdErr)}

\end{frame}

%-------------------------------------------------------------------------------
%                    Overdispersion
%-------------------------------------------------------------------------------

\section{Overdispersion}
\subsection{}
\begin{frame}[fragile]
\frametitle{Residuals Plots}

<<resids4overdisp-plot, fig.width=6, fig.height=6, echo=FALSE, include = FALSE, cache = TRUE>>=
	fits <-	EstOut2$fits$fitsFixed
	par(mar = c(5,5,1,1))
	plot(fits, (counts - fits)^2/fits, pch = 19,
		xlab = "Fitted Value", ylab = "Pearson Residuals",
		cex.lab = 1.8, cex.axis = 1.5)
	ab <- coef(lm(y ~ x, data = data.frame(x = fits, 
		y = (counts - fits)^2/fits)))
	abline(a = ab[1], b = ab[2], lwd = 3, col = "blue")
	ODtrad <- sum((counts - fits)^2/fits)/(length(fits) - 19)
	lines(c(min(fits),max(fits)), c(ODtrad,ODtrad), lwd = 3, col = "black")
	lines(c(min(fits),max(fits)), c(1,1), lwd = 3, lty = 2)
	x.75 <- quantile(fits, .75)
	ODtrim <- EstOut2$ODtrim
	lines(c(x.75,max(fits)), c(ODtrim,ODtrim), lwd = 3, col = rgb(.2,.9,.2))
@

<<rawresids4overdisp-plot, fig.width=6, fig.height=6, echo=FALSE, include = FALSE, cache = TRUE>>=
	par(mar = c(5,5,1,1))
	plot(fits, (counts - fits)^2, pch = 19,
		xlab = "Fitted Value", ylab = "Squared Raw Residuals",
		cex.lab = 1.8, cex.axis = 1.5)
	b <- coef(lm(y ~ x - 1, data = data.frame(x = fits, 
		y = (counts - fits)^2, weights = sqrt(fits))))
	abline(a = 0, b = b, lwd = 5, col = "blue")
	abline(a = 0, b = 1, lwd = 5, lty = 2)
@

	\vspace{-.1cm}
	\begin{center}
	\includegraphics[width = .5\maxwidth]{figure/resids4overdisp-plot}
	\includegraphics[width = .5\maxwidth]{figure/rawresids4overdisp-plot}
	\end{center}

\end{frame}

%-------------------------------------------------------------------------------
%                    Overdispersion Estimators
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Overdispersion Estimators}

	\begin{itemize}
	\item The traditional estimator:
	\[
	\omega_{OD} = \max\left(1, \frac{1}{n-r}\sum_{i=1}^n\frac{(y_i-\phi_i)^2}{\phi_i}\right)
	\]
	where $r$ is the rank of $\bX$.
	\item Weighted regression estimator:
	\[
	\omega_{WR} = \max\left(1, \arg\underset{\omega}{\min}\sum_{i=1}^n\sqrt{\phi_i}[(y_i - \phi_i)^2 - \omega\phi_i]^2\right),
	\]
	where $\sqrt{\phi_i}$ were the weights
	\end{itemize}

\end{frame}

%-------------------------------------------------------------------------------
%                    Overdispersion Estimators
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Overdispersion Estimators}

	\begin{itemize}
	\item Trimmed Mean:
	\[
	\omega_{TG}(p) = \max\left(1, \frac{1}{n - \lfloor np \rfloor -r}
		\sum_{i = \lfloor np \rfloor + 1}^n\frac{(y_{(i)}-\phi_{(i)})^2}{\phi_{(i)}}\right)
	\]
	where $0 \le p \le 1$, $y_{(i)}$ and $\phi_{(i)}$ are ordered values, and $\lfloor x \rfloor$ rounds $x$ down to the nearest integer.
	\end{itemize}

\end{frame}

%-------------------------------------------------------------------------------
%                    Adjusted Variance Estimators
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Adjusted Variance Estimators}

	\begin{itemize}
	\item 
	$\widehat{\var}_{OD}(\widehat{T}(A)) = \omega_{OD}\widetilde{\var}(\widehat{T}(A))$
	\item 
	$\widehat{\var}_{WR}(\widehat{T}(A)) = \omega_{WR}\widetilde{\var}(\widehat{T}(A))$
	\item 
	$\widehat{\var}_{TG}(\widehat{T}(A);p) = \omega_{TG}{p}\widetilde{\var}(\widehat{T}(A))$
	\item 
$\widehat{\var}_{TL}(\widehat{T}(A);p) = \frac{|\cU|}{n_p}\sum_{j=1}^{n_p}\exp(\bx_{\hat{\brho}}(\bu_j)\upp\hat{\bbeta})\times$ $\max(1,\omega_{TG}(p)I(\exp(\bx(\bs_j)\upp \hat{\bbeta}) \ge \phi_{(\lfloor np \rfloor)}) + $  $\bd\upp\left[ |B| \sum_{i=1}^{n} \bx(\bs_i)\bx({\bs_i})\upp\exp(\bx(\bs_i)\upp \hat{\bbeta}) \right]\upi\bd $ \\
where $I(\cdot)$ is the indicator function
	\end{itemize}

\end{frame}

%-------------------------------------------------------------------------------
%                    Simulations
%-------------------------------------------------------------------------------

\section{Simulations}
\subsection{}
\begin{frame}[fragile]
\frametitle{Simulations}

\begin{center}
\includegraphics[width = .55\maxwidth]{figure/SimDataCrop}
\end{center}

\end{frame}

%-------------------------------------------------------------------------------
%                        Simulation Experiment 3
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Simulation Experiment 3}

\begin{table}[ht]
\centering
\begin{tabular}{rrrrr}
  \hline
 & knots1 & knots2 & knots3 & knots4 \\ 
  \hline
bias & -2.389 & -4.365 & -2.911 & -1.378 \\ 
  RMSPE & 79.207 & 79.250 & 79.200 & 80.125 \\ 
  CI90 & 0.775 & 0.772 & 0.782 & 0.776 \\ 
  CI90OD & 0.801 & 0.783 &  &  \\ 
  CI90WR & 0.918 & 0.906 & 0.866 & 0.836 \\ 
  CI90TG & 0.923 & 0.930 & 0.929 & 0.946 \\ 
  CI90TL & 0.871 & 0.883 & 0.879 & 0.904 \\ 
  fail & 0.000 & 0.000 & 0.000 & 0.000 \\ 
   \hline
\end{tabular}
\end{table}

\end{frame}

%-------------------------------------------------------------------------------
%                        Simulation Experiment 4
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Simulation Experiment 4}

\begin{table}[ht]
\centering
\begin{tabular}{rrrrr}
  \hline
 & knots1 & knots2 & knots3 & knots4 \\ 
  \hline
bias & 5.179 & 3.440 & 7.139 & 14.536 \\ 
  RMSPE & 60.403 & 61.021 & 61.808 & 67.601 \\ 
  CI90 & 0.831 & 0.825 & 0.826 & 0.836 \\ 
  CI90OD & 0.844 & 0.831 &  &  \\ 
  CI90WR & 0.939 & 0.928 & 0.924 & 0.917 \\ 
  CI90TG & 0.929 & 0.919 & 0.909 & 0.918 \\ 
  CI90TL & 0.893 & 0.892 & 0.885 & 0.888 \\ 
  fail & 0.000 & 0.000 & 0.000 & 0.013 \\ 
   \hline
\end{tabular}
\end{table}

\end{frame}

%-------------------------------------------------------------------------------
%                    Real Example
%-------------------------------------------------------------------------------

\section{Example}
\subsection{}
\begin{frame}[fragile]
\frametitle{Real Example}

	<<echo=FALSE, include = FALSE, cache = TRUE>>=
		path <- system.file("rawdata/seals", package = "spPlotSampCourse")
		outlineFile <- paste(path,"/","outline", sep = "")
		outline <- readShapePoly(outlineFile)
		plotsFile <- paste(path,"/","plots", sep = "")
		plots <- readShapePoly(plotsFile)

		# number of photos
		length(plots@data[,1])
		# percentage of zeros
		sum(plots@data[,"counts"] == 0)/length(plots@data[,1])
		sum(plots@data[,"counts"] > 0)
		sum(plots@data[,"counts"])
		max(plots@data[,"counts"])
		# area surveyed in km^2
		islandArea <- 0
		for(j in 2:11)
			islandArea <- islandArea + outline@polygons[[1]]@Polygons[[j]]@area
		totalArea <- outline@polygons[[1]]@Polygons[[1]]@area - islandArea
		#  Run the function
		#undebug(spCountSamp)
		sCSout <- spCountSamp(counts ~ 1, outline, plots, 
				nNodesRequestC = 6, nNodesRequestF = 25, 
				percentZero = 75, nodeSetSeed = 101)
		summary(sCSout)
		@

	<<icyBayKnots-plot, fig.width=8, fig.height=6, echo=FALSE, include = FALSE>>=
	par(mar = c(0,0,0,0))
	plot(outline)
	plot(plots, add = TRUE)
	points(sCSout$nodeLocationsF, pch = 19, col = "red", cex = 2)
	points(sCSout$nodeLocationsC, pch = 19, col = "blue", cex = 2)
	plot(sCSout$convexPolyKnotsFine, add = TRUE, lwd = 3, border = rgb(.2,.8,.2))
	@

	\vspace{-.4cm}
	\begin{center}
		\includegraphics[width = .9\maxwidth]{figure/icyBayKnots-plot}
	\end{center}


\end{frame}

%-------------------------------------------------------------------------------
%                    Real Example
%---------------------------------------------------------]o---------------------

\begin{frame}[fragile]
\frametitle{Real Example}

	<<icyBayFit-plot, fig.width=8, fig.height=6, echo=FALSE, include = FALSE, cache = TRUE>>=
		qtiles <- quantile(sCSout$Predictions$Predictions, p = (1:7)/8)
		breaks <- c(min(sCSout$Predictions$Predictions)-1e-32, 
			qtiles, max(sCSout$Predictions$Predictions))
		cramp <- rainbow(length(breaks) - 1, start = .66, end = .99)

		image.spCountSamp(sCSout, breaks = breaks, col = cramp)
		title("Fitted Prediction Surface", cex.main = 2)
		plot(plots, add = TRUE)
		plot(outline, add = TRUE)
		addBreakColorLegend(682464, 1181494, 684511, 1189428, 
			breaks = breaks, colors = cramp, printFormat = "2.4", cex = 1.1)
		SpatialPolygonsRescale(layout.scale.bar(), offset = c(688240, 1181567),
			scale = 5000, fill = c("transparent","black"), plot.grid = FALSE)
		text(688203,1182408,"0", cex = 1.5)
		text(693175,1182408,"5 km", cex = 1.5)
		SpatialPolygonsRescale(layout.north.arrow(), offset = c(697562,1193085),
			scale = 2000, col = "green", plot.grid = FALSE)
	@

	\vspace{-.4cm}
	\begin{center}
		\includegraphics[width = \maxwidth]{figure/icyBayFit-plot}
	\end{center}


\end{frame}

%-------------------------------------------------------------------------------
%                    Real Example
%-------------------------------------------------------------------------------

\begin{frame}[fragile]
\frametitle{Real Example}

<<size = 'tiny'>>=
sealDensity <- sum(plots@data[,"counts"])/
	(sCSout$propSurveyed*totalArea)
sealDensity*totalArea
summary(sCSout)
@

\end{frame}

%-------------------------------------------------------------------------------
%                        Goals
%-------------------------------------------------------------------------------

\section{summary}
\subsection{}
\begin{frame}[fragile]
\frametitle{Goals}

\footnotesize
	An estimator that is:
		\begin{itemize}
		\item fast to compute, robust, and requires few modeling decisions, similar to classical survey methods, 			\item based only on counts within plots; actual spatial locations of animals are unknown, 
		\item for the actual number of seals, not the mean of some assumed process that generated the data, 
		\item have a variance estimator with a population correction factor that shrinks to zero as the proportion of the study area that gets sampled goes to one, 
		\item unbiased with valid confidence intervals, 
		\item able to accommodate nonstationary variance throughout the area
		\end{itemize}

\end{frame}


\end{document}
